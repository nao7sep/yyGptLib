using yyLib;

namespace yyGptLibConsole
{
    internal class Program
    {
#pragma warning disable IDE0060 // Remove unused parameter
        static void Main (string [] args)
#pragma warning restore IDE0060
        {
            try
            {
                // Tester1.Test ();
                // Tester2.Test ();

                // Tester3.Test (100); // Do not run this test casually as it might cost a lot of money.

                /* Tester3.GeneratePage (@"C:\Repositories\Resources\Static\Beautiful People and Places",
                    "This page contains 100 images generated by DALL-E 3 using the following code in February 2024 for testing purposes." +
                    Environment.NewLine +
                    Environment.NewLine +
                    "https://github.com/nao7sep/yyGpt/blob/main/yyGptLibConsole/Tester3.cs"); */

                string xInvariantLanguagePageFilePath = @"C:\Repositories\Resources\Static\Beautiful People and Places\Beautiful People and Places.md";

                // ChatGPT seems confident in English, Spanish, French, German, Italian, Portuguese, Dutch, Russian, Chinese, Japanese, and Korean.
                // It also says: However, my proficiency varies across languages, with the highest level of fluency in English.

                var xLanguages = new []
                {
                    // new { Code = "en", Name = "English" },
                    new { Code = "es", Name = "Spanish" },
                    new { Code = "fr", Name = "French" },
                    new { Code = "de", Name = "German" },
                    new { Code = "it", Name = "Italian" },
                    new { Code = "pt", Name = "Portuguese" },
                    new { Code = "nl", Name = "Dutch" },
                    new { Code = "ru", Name = "Russian" },
                    new { Code = "zh", Name = "Chinese" },
                    new { Code = "ja", Name = "Japanese" },
                    new { Code = "ko", Name = "Korean" }
                };

                foreach (var xLanguage in xLanguages)
                    Tester3.TranslatePage (xInvariantLanguagePageFilePath, xLanguage.Code, xLanguage.Name);
            }

            catch (Exception xException)
            {
                yySimpleLogger.Default.TryWriteException (xException);
                Console.WriteLine (xException.ToString ());
            }
        }
    }
}
